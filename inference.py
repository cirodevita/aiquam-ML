import onnxruntime as ort
import numpy as np
# import torch
# from scipy.stats import mode


def run_inference(session, input_array):
    input_name = session.get_inputs()[0].name
    print(input_name)
    #inputs = {input_name: input_array}

    # inputs = {"input": input_array}

    # outputs = session.run(None, inputs)
    # return outputs[0]
    return 0


"""
def majority_vote(predictions):
    # Trova la classe con il maggior numero di voti
    predictions = np.array(predictions)
    mode_data = mode(predictions, keepdims=False)
    mode_label = mode_data.mode
    return mode_label
"""


model_paths = [
    #'./checkpoints/AIQUAM_CNN/model.onnx',
    #'./checkpoints/AIQUAM_DLinear/model.onnx',
    #'./checkpoints/AIQUAM_Informer/model.onnx',
    #'./checkpoints/AIQUAM_Reformer/model.onnx',
    #'./checkpoints/AIQUAM_TimesNet/model.onnx',
    #'./checkpoints/AIQUAM_Transformer/model.onnx',
    './checkpoints/AIQUAM_KNN/model.onnx'
]

#input_list = [1163.69190838868,1278.3193624586904,1301.0639331519694,1332.0165776755896,1457.2807522016344,1555.0274566672779,1549.573452657647,1522.691375050575,1553.2793367258212,1585.7905045507457,1642.044513201054,1702.8496795253368,1787.1138117332225,1842.7277256330715,1800.2175354715712,1774.0784030692316,1818.2837309342626,1385.521791513942,1144.1325945342892,1063.0370225171953,1106.1867001713144,1164.4404254562564,1268.8351760092287,1353.813985491232,1389.8747792076806,1467.8118413409597,1604.4810221341245,1688.1767203945865,1780.284553361654,1840.7321349185477,1908.5916693750194,1823.9463041434879,1766.6265701021127,1721.053767309431,1744.5900847801365,1710.5720364250885,1700.3235948965848,1692.63105404098,1760.792531979439,1759.237224174613,2031.3856161419772,1142.4180936962534,1118.0089924530523,1835.8084363741677,2452.8343282972464,2516.1347048786943,2461.760361324495,2358.7182727291447,2266.3709640836646,2177.6442447193103,2110.641742847355,1963.1532785235731,1927.5320876564879,1828.2192968425488,1753.1574378755295,1638.432172935865,1585.4585888820482,1542.7613885653968,1618.2521035282632,1705.7391397026026,1787.2007250724582,1746.097362249427,1665.7236263465968,1516.0644949210648,1496.485806191742,1314.2796631730166,1177.4927573389743,1032.9725299321583,921.621629288747,848.4701541973619,831.9039944015442,801.8606964347645,803.5994685032541,3.0] # 3
#input_list = [9.638965606689451,8.528149604797363,8.206121444702148,9.252239227294922,9.835723876953123,8.328089714050293,10.303211212158203,10.164422988891602,9.624752044677734,9.576379776000977,10.22796630859375,7.973653316497803,11.990747451782228,9.065567016601562,9.965217590332031,11.137823104858398,13.19857406616211,9.518743515014648,10.674068450927734,8.454437255859375,10.792040824890137,8.871500015258789,7.175513744354248,11.450885772705078,8.489874839782715,12.006072998046877,12.363734245300291,8.916508674621582,11.754343032836914,8.452788352966309,10.041967391967772,12.21505069732666,12.151617050170898,8.53586196899414,7.815722942352295,8.95989990234375,9.281847953796388,7.134936809539795,9.32875919342041,8.755412101745605,9.756495475769045,9.159186363220217,7.532108306884766,6.493016242980957,6.541763782501221,5.97338342666626,6.58458137512207,5.250396251678467,3.538750410079956,3.3028318881988525,3.997501850128174,4.035384178161621,2.722418785095215,1.9789936542510984,2.041144371032715,2.041144371032715,1.4901747703552246,1.4824750423431396,1.4824750423431396,1.1195427179336548,1.3703356981277466,2.1990208625793457,1.6540900468826294,2.3426787853240967,1.903347730636597,1.1952790021896362,0.721670389175415,1.688096523284912,0.8745721578598022,0.3173575103282928,0.9559150338172911,1.3029766082763672,1.4476211071014404,0.0] # 0
#input_list = [55.64901172248342,60.33082393927821,51.68331877916189,47.752539321405685,49.96744544488693,49.91936672142238,53.15005097587721,51.51812484464355,52.283725205846295,58.2672212797674,60.173647453210585,65.99503238321502,64.27257398419027,66.57243986603486,61.89470598559318,67.4806360531602,69.7821177075567,72.92709640948972,71.60686960206871,66.04003023516024,66.35683333150831,67.79292397796013,61.7892972628152,69.55743880670403,60.75248331144442,55.71020154023905,58.730549744993695,59.76655139967003,58.141567484995576,60.5242732113166,64.43239861086826,72.8484907414811,78.73297560623006,74.21615630099556,83.75279985121743,80.56964279756077,84.09885159099441,85.0240421823999,81.61973563191758,79.79995102904242,83.56740258714197,78.66654514550265,84.59492743053359,79.87605882069798,89.04393604258189,91.46553146041884,92.43362497212028,93.05562383123856,93.8126674609838,90.50314279651606,95.21463552456628,99.86771386987661,94.87780721831683,97.62667766865641,102.25271423049557,113.41661761264965,117.03208832438455,108.64985693120029,109.00114286500951,101.87662495114883,98.06089648890216,94.01827457702774,99.91507707603219,96.08543503380986,85.3280801889034,102.97276819719711,96.01052082739521,113.48421140267928,126.62263896292959,141.16903491491053,154.88705870689358,164.96896172737632,169.4445351562827,1.0] # 1
#input_list = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0] # 0
input_list = [494.79931640625,504.8264465332031,454.9320983886719,397.55279541015625,341.72088623046875,349.1586303710937,348.7724914550781,324.2787780761719,333.1670227050781,362.272216796875,396.6249084472656,430.06976318359375,484.9303894042969,453.0697021484375,477.3464965820313,434.7988586425781,531.5578002929688,344.17449951171875,225.81866455078125,314.5093078613281,322.84539794921875,301.417236328125,309.225830078125,282.3187866210937,268.01959228515625,289.224365234375,312.3394775390625,275.701904296875,247.72433471679688,233.9879608154297,235.0616607666016,181.0559539794922,201.79379272460935,225.74411010742188,247.97442626953125,247.18331909179688,274.9723205566406,280.5320739746094,268.0481262207031,194.05596923828125,224.49575805664065,137.5928955078125,101.20760345458984,231.069580078125,375.4364318847656,407.2272644042969,442.3384094238281,413.7304382324219,393.2890625,433.6060791015625,470.7800903320313,514.7785034179688,556.407470703125,598.1444091796875,575.6135864257812,438.1578979492188,337.7201538085937,336.3081970214844,329.26397705078125,323.6751708984375,329.8407592773437,328.40216064453125,327.1003723144531,270.5162658691406,240.3106689453125,253.34133911132807,212.14730834960935,300.3067626953125,396.8921813964844,463.1541137695313,539.9480590820312,608.8101196289062,591.9304809570312,2.0] # 2

input_array = np.array(input_list, dtype=np.float32)
input_array = input_array.reshape(1, -1, 1)

predictions = []
for path in model_paths:
    print(path)
    session = ort.InferenceSession(path)
    output = run_inference(session, input_array)
    # output_tensor = torch.tensor(output)
    # probs = torch.nn.functional.softmax(output_tensor, dim=1)
    # predicted_class = torch.argmax(probs, dim=1).item()
    # predictions.append(predicted_class)

# print(predictions)
# final_pred = majority_vote(predictions)
# print(final_pred)